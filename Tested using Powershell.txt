=======================================================================
command for testing microsoft asp.net docker container sample
=======================================================================
docker run -it --rm -p 8000:80 --name aspnetcore_sample microsoft/dotnet-samples:aspnetapp

=======================================================================
command for building and running PaymentAPI app in a linux container on local machine
=======================================================================
--buliding docker image
docker build . -t paymentapi
-- list images
docker image ls
--for local testing use below line
docker run  --rm -i -p 8080:80 paymentapi
--after this you can browse for http://localhost:8080/swagger in IE
--Kill the process to stop webserver
-- tag and upload
=======================================================================
Tag and Upload image to Azure Container Registry
=======================================================================
docker tag paymentapi payappcontainer.azurecr.io/paymentapi
docker login payappcontainer.azurecr.io -u PayAppContainer -p Nw7S2EY66MAI97DXI45amimrLxI0+Oab
docker push payappcontainer.azurecr.io/paymentapi

-- test image from ACR into local machine
docker login payappcontainer.azurecr.io -u PayAppContainer -p Nw7S2EY66MAI97DXI45amimrLxI0+Oab
docker run -it --rm -p 8000:80 --name paymentapi payappcontainer.azurecr.io/paymentapi
--after this you can browse for http://localhost:8000/swagger in IE

=======================================================================
Commands used for deploying docker image to Kubernates from local dev machine
=======================================================================
az login
az aks get-credentials --resource-group PaymentAppResourceGroup --name payappcluster
az aks browse --resource-group PaymentAppResourceGroup --name payappcluster

kubectl get serviceaccounts default -o yaml > ./serviceaccount.yml
kubectl create --save-config=true -f deploy.yml
above command is for first time, next time onwards use below
kubectl apply -f Deploy.yml
...

az login
az aks get-credentials --resource-group PaymentAppResourceGroup --name payappcluster
az aks browse --resource-group PaymentAppResourceGroup --name payappcluster
--above command launches Kubernates Dashboard in a browser you need to stop this process to issue next commands from command prompt

-- One time activity
kubectl get serviceaccounts default -o yaml > ./serviceaccount.yml
make changes to yml file  as described at "https://pascalnaber.wordpress.com/2017/09/12/run-net-core-2-docker-images-in-kubernetes-using-azure-container-service-and-azure-container-registry/" 
then issue below command
kubectl replace serviceaccount default -f ./serviceaccount.yml
kubectl config view
--create deploy.yml file as described at "https://pascalnaber.wordpress.com/2017/09/12/run-net-core-2-docker-images-in-kubernetes-using-azure-container-service-and-azure-container-registry/" 
then issue below command
kubectl create --save-config=true -f deploy.yml
--above command is for first time, next time onwards use below
kubectl apply -f Deploy.yml

=======================================================================
